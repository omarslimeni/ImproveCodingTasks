#Day9_part2
#result 2427
#code:

import numpy as np
list_of_moves = []
for line in open("moves.txt").readlines():
    print(line)
    direction,step = line.split()
    list_of_moves.append((direction,int(step)))
print(list_of_moves)
knot = [np.array([0,0]) for i in range(10)]
tail_of_knot = np.array([0,0])

dict_direction = {
    'U': np.array([0, -1]),
    'D': np.array([0, 1]),
    'R': np.array([1, 0]),
    'L': np.array([-1, 0]),
}
tail_position_1 = set()
tail_position_9 = set()
for direction, steps in list_of_moves:
    for _ in range(steps):
        #print(_)
        knot[0] += dict_direction[direction]
        for j in range(1,len(knot)):
            difference_limit = knot[j-1] - knot[j]
            #a = abs(difference_limit)
            if max(abs(difference_limit)) > 1:
               knot[j] += np.sign(difference_limit)
        print(*knot[:2])
        #tail_position.append(tail_of_knot)
        tail_position_1.add(tuple(knot[1]))
        tail_position_9.add(tuple(knot[9]))
print(len(tail_position_1))
print(len(tail_position_9))


